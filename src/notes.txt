// DONE: polls refresh
// DONE: Logout clear loggedin user and sessionStorage
// DONE: Add UserProfile
// DONE: main menu not showing on error page
// DONE: when add question from leaderboard i after question is added i should automatically be sent back to leaderboard
// DONE: Fix UserProfile progress bar
// DONE: Add btn clicks to poll box / h3 already has click event
// DONE: styles for pollPanels now component is wrapped in Link (30m)
// DONE: after loggin with new player unanswered questions are not displayed (10m)
// DONE: no need for duplicate function as long as unanswered and answered are updated correctly
// DONE: no polls left alert not showing (45m)
// DONE: Add the OR Circle (10 minutes)
// DONE: Add avatar to question author
// DONE: Add Avatars to Menu (10 minutes)
// DONE: Menu Score (30 minutes)
// DONE: On refresh logout user and reset sessionStorage (when refreshing from poll question) sessionStorage needs a reset on condition
// DONE: If one poll question is left send route straight to Poll component
// DONE: if question exist render question otherwise this.props.history.push('/login') and createAlert({message: 'this question does not exist': show: true})
// DONE: 404 redirect
// DONE: The unanswered and answered polls are available at the root
// DONE: clicking on menu around login dropdown navigates to profile
// DONE: new User does not persist
// DONE: disable add poll button
// DONE: check after adding a new poll
// DONE: two clicks on details breaks styles
// DONE: show details on redirect (only details from users unanswered obj) !Important
// DONE: isValid  (only details from users unanswered obj) !Important
// TBD: should logout clear redux?

// TODO: error page detect bad url

// NEXTVERSION: Next Steps
// Restructure UI and Data Flow to consistently flow in one direction and is predictable
// Menu alignment (60 minutes)
// User can browse for an icon (1 hour)
// Spacing around icons and pollPanels consistent (1 hour)
// Design a gameboard (5 days)
// Design a favIcon (1 hour)
// Make use of the sticky footer (TBD)
// Add a interactive user guide (pilot 2 weeks)
// Plan smooth transitions from one event to another and between screens (TBD)
// Select player dropdown should be bundled and located with the player icon (TBD)
// On refresh should i keep player logged in (TBD)
// Handle Leaderboard (TBD)
// Show Details on Answered Polls by default

// KNOWLEDGE: Topics to study
- callbacks
- future architecture improvements, remove logic from render and place in component methods or utils folder
- remove duplication of effort. make better use of component 'Containers' for Redux actions and using {...props} to pass props down to lower components
- timers
- event listners
- mutation control (source of truth)
- integrate CICD deployment for portfolio
- CircleCI / Jenkins / research and combine with Github
- Try to recreate app in C# .NetCore, Angular, and plan HTML,CSS, JavaScript and document differences as Case Studies